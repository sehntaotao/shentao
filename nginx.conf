 
#user  nobody;
worker_processes  1;
 
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
 
#pid        logs/nginx.pid;
 
 
events {
    worker_connections  1024;
}
 
 
http {
    include       mime.types;
    default_type  application/octet-stream;
 
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';
 
    #access_log  logs/access.log  main;
 
    sendfile        on;
    #tcp_nopush     on;
 
    #keepalive_timeout  0;
    keepalive_timeout  65;
 
    #gzip模块设置
    #开启gzip压缩输出
    gzip on; 
    #最小压缩文件大小
    gzip_min_length 1k; 
    #压缩缓冲区
    gzip_buffers 4 16k;
    #压缩版本（默认1.1，前端如果是squid2.5请使用1.0）
    gzip_http_version 1.0;
    #压缩等级 1-9 等级越高，压缩效果越好，节约宽带，但CPU消耗大
    gzip_comp_level 2;
    #压缩类型，默认就已经包含text/html，所以下面就不用再写了，写上去也不会有问题，但是会有一个warn。
    gzip_types text/plain application/x-javascript text/css application/xml application/javascript text/xml;
    #前端缓存服务器缓存经过压缩的页面
    gzip_vary on;
 
    client_max_body_size   20m;
    server {
        listen       80;
        server_name  www.aaaaaa.com;
 
        #charset koi8-r;
 
        #access_log  logs/host.access.log  main;
		location / {
			root   /usr/share/nginx/html;
			index  index.html index.htm;
			try_files $uri $uri/ /index.html;
        }
        location ~ ^/(images|img|javascript|js|im|css|tinymce|flash|media|static)/ {
            root /usr/share/nginx/html;
            gzip_static on;
            autoindex on;
        }
		location ^~/els {
			proxy_pass GATEWAY_API_URL;
        }

        location /els/websocket  {   
            proxy_pass GATEWAY_API_URL;
            proxy_http_version 1.1;    
            proxy_set_header Upgrade $http_upgrade;    
            proxy_set_header Connection "Upgrade";    
            proxy_set_header X-real-ip $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
        }
        #error_page  404              /404.html;
 
        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }


    }
}